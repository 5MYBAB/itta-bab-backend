<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.fivemybab.ittabab.board.query.mapper.PostQueryMapper">
    <resultMap id="PostQueryResultMap" type="com.fivemybab.ittabab.board.query.dto.PostQueryDto">
        <result property="postId" column="post_id"/>
        <result property="title" column="post_title"/>
        <result property="content" column="post_content"/>
        <result property="createdAt" column="create_date" jdbcType="TIMESTAMP"/>
        <result property="memberName" column="username"/>
        <result property="likeCount" column="like_count"/>
        <result property="commentCount" column="comment_count"/>
    </resultMap>

    <resultMap id="PostQueryResultMap2" type="com.fivemybab.ittabab.board.query.dto.MyPostResponse">
        <result property="postId" column="post_id"/>
        <result property="userId" column="user_id"/>
        <result property="postTitle" column="post_title"/>
        <result property="postContent" column="post_content"/>
        <result property="createDate" column="create_date" jdbcType="TIMESTAMP"/>
        <result property="updateDate" column="update_date" jdbcType="TIMESTAMP"/>
        <result property="isBlinded" column="is_blinded"/>
    </resultMap>

    <!-- 게시물 목록 조회 (최신순) -->
    <select id="selectPostsByTime" resultMap="PostQueryResultMap">
        SELECT p.post_id, p.post_title, p.post_content, p.create_date, u.username
        FROM post p
                 JOIN user_info u ON p.user_id = u.user_id
        WHERE u.course_id = #{courseId}
        ORDER BY p.create_date DESC
    </select>

    <!-- 게시물 목록 조회 (좋아요 내림차순) -->
    <select id="selectPostsByLikesDesc" resultMap="PostQueryResultMap">
        SELECT p.post_id, p.post_title, p.post_content, p.create_date, u.username, COUNT(g.good_id) AS like_count
        FROM post p
                 JOIN user_info u ON p.user_id = u.user_id
                 LEFT JOIN good g ON g.target_id = p.post_id AND g.target = 'POST'
        WHERE u.course_id = #{courseId}
        GROUP BY p.post_id, p.post_title, p.post_content, p.create_date, u.username
        ORDER BY like_count DESC
    </select>

    <!-- 게시물 목록 조회 (좋아요 오름차순) -->
    <select id="selectPostsByLikesAsc" resultMap="PostQueryResultMap">
        SELECT p.post_id, p.post_title, p.post_content, p.create_date, u.username, COUNT(g.good_id) AS like_count
        FROM post p
                 JOIN user_info u ON p.user_id = u.user_id
                 LEFT JOIN good g ON g.target_id = p.post_id AND g.target = 'POST'
        WHERE u.course_id = #{courseId}
        GROUP BY p.post_id, p.post_title, p.post_content, p.create_date, u.username
        ORDER BY like_count ASC
    </select>

    <!-- 게시물 목록 조회 (댓글 많은 순) -->
    <select id="selectPostsByComments" resultMap="PostQueryResultMap">
        SELECT p.post_id, p.post_title, p.post_content, p.create_date, u.username, COUNT(pc.post_comment_id) AS comment_count
        FROM post p
                 JOIN user_info u ON p.user_id = u.user_id
                 LEFT JOIN post_comment pc ON pc.post_id = p.post_id
        WHERE u.course_id = #{courseId}
        GROUP BY p.post_id, p.post_title, p.post_content, p.create_date, u.username
        ORDER BY comment_count DESC
    </select>

    <select id="findMyPostList" resultMap="PostQueryResultMap2">
        SELECT *
        FROM post
        WHERE user_id = #{userId}
        ORDER BY create_date DESC
      
    <!-- 게사글 상세 조회-->
    <select id="selectPostByPostId" resultMap="PostQueryResultMap">
        SELECT *
        FROM post
            where post_id = #{postId};
    </select>

</mapper>
